//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ValueRemit.Service.Quickteller {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://services.interswitchng.com/quicktellerservice/", ConfigurationName="Quickteller.QuickTellerService")]
    public interface QuickTellerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="ValidateCustomer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ValidateC" +
            "ustomerResponse")]
        string ValidateCustomer(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="ValidateCustomer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ValidateC" +
            "ustomerResponse")]
        System.Threading.Tasks.Task<string> ValidateCustomerAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="DoTransfer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/DoTransfe" +
            "rResponse")]
        string DoTransfer(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="DoTransfer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/DoTransfe" +
            "rResponse")]
        System.Threading.Tasks.Task<string> DoTransferAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="CancelTransfer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/CancelTra" +
            "nsferResponse")]
        string CancelTransfer(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="CancelTransfer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/CancelTra" +
            "nsferResponse")]
        System.Threading.Tasks.Task<string> CancelTransferAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="SendSessionKey", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/SendSessi" +
            "onKeyResponse")]
        string SendSessionKey(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="SendSessionKey", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/SendSessi" +
            "onKeyResponse")]
        System.Threading.Tasks.Task<string> SendSessionKeyAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryTransfer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/QueryTran" +
            "sferResponse")]
        string QueryTransfer(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryTransfer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/QueryTran" +
            "sferResponse")]
        System.Threading.Tasks.Task<string> QueryTransferAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AuthoriseCashOut", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/Authorise" +
            "CashOutResponse")]
        string AuthoriseCashOut(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AuthoriseCashOut", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/Authorise" +
            "CashOutResponse")]
        System.Threading.Tasks.Task<string> AuthoriseCashOutAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AuthoriseAccountCashOut", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/Authorise" +
            "AccountCashOutResponse")]
        string AuthoriseAccountCashOut(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AuthoriseAccountCashOut", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/Authorise" +
            "AccountCashOutResponse")]
        System.Threading.Tasks.Task<string> AuthoriseAccountCashOutAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="ReverseCashOut", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ReverseCa" +
            "shOutResponse")]
        string ReverseCashOut(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="ReverseCashOut", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ReverseCa" +
            "shOutResponse")]
        System.Threading.Tasks.Task<string> ReverseCashOutAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="StatusCheck", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/StatusChe" +
            "ckResponse")]
        string StatusCheck();
        
        [System.ServiceModel.OperationContractAttribute(Action="StatusCheck", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/StatusChe" +
            "ckResponse")]
        System.Threading.Tasks.Task<string> StatusCheckAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryTransaction", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/QueryTran" +
            "sactionResponse")]
        string QueryTransaction(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryTransaction", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/QueryTran" +
            "sactionResponse")]
        System.Threading.Tasks.Task<string> QueryTransactionAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetSystemSettings", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetSystem" +
            "SettingsResponse")]
        string GetSystemSettings(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetSystemSettings", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetSystem" +
            "SettingsResponse")]
        System.Threading.Tasks.Task<string> GetSystemSettingsAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="CreateUser", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/CreateUse" +
            "rResponse")]
        string CreateUser(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="CreateUser", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/CreateUse" +
            "rResponse")]
        System.Threading.Tasks.Task<string> CreateUserAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="ActivateUser", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ActivateU" +
            "serResponse")]
        string ActivateUser(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="ActivateUser", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ActivateU" +
            "serResponse")]
        System.Threading.Tasks.Task<string> ActivateUserAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateUser", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/UpdateUse" +
            "rResponse")]
        string UpdateUser(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateUser", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/UpdateUse" +
            "rResponse")]
        System.Threading.Tasks.Task<string> UpdateUserAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="ChangePassword", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ChangePas" +
            "swordResponse")]
        string ChangePassword(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="ChangePassword", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ChangePas" +
            "swordResponse")]
        System.Threading.Tasks.Task<string> ChangePasswordAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="ResetPassword", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ResetPass" +
            "wordResponse")]
        string ResetPassword(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="ResetPassword", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ResetPass" +
            "wordResponse")]
        System.Threading.Tasks.Task<string> ResetPasswordAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AuthenticateUser", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/Authentic" +
            "ateUserResponse")]
        string AuthenticateUser(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AuthenticateUser", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/Authentic" +
            "ateUserResponse")]
        System.Threading.Tasks.Task<string> AuthenticateUserAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AuthenticateUserSecurityToken", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/Authentic" +
            "ateUserSecurityTokenResponse")]
        string AuthenticateUserSecurityToken(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AuthenticateUserSecurityToken", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/Authentic" +
            "ateUserSecurityTokenResponse")]
        System.Threading.Tasks.Task<string> AuthenticateUserSecurityTokenAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetUser", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetUserRe" +
            "sponse")]
        string GetUser(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetUser", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetUserRe" +
            "sponse")]
        System.Threading.Tasks.Task<string> GetUserAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillers", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetBiller" +
            "sResponse")]
        string GetBillers(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillers", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetBiller" +
            "sResponse")]
        System.Threading.Tasks.Task<string> GetBillersAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLatestBillers", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetLatest" +
            "BillersResponse")]
        string GetLatestBillers();
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLatestBillers", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetLatest" +
            "BillersResponse")]
        System.Threading.Tasks.Task<string> GetLatestBillersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="GetFeaturedBillers", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetFeatur" +
            "edBillersResponse")]
        string GetFeaturedBillers(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetFeaturedBillers", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetFeatur" +
            "edBillersResponse")]
        System.Threading.Tasks.Task<string> GetFeaturedBillersAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillerPaymentItems", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetBiller" +
            "PaymentItemsResponse")]
        string GetBillerPaymentItems(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillerPaymentItems", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetBiller" +
            "PaymentItemsResponse")]
        System.Threading.Tasks.Task<string> GetBillerPaymentItemsAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillerCategories", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetBiller" +
            "CategoriesResponse")]
        string GetBillerCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillerCategories", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetBiller" +
            "CategoriesResponse")]
        System.Threading.Tasks.Task<string> GetBillerCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="DoBillPaymentInquiry", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/DoBillPay" +
            "mentInquiryResponse")]
        string DoBillPaymentInquiry(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="DoBillPaymentInquiry", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/DoBillPay" +
            "mentInquiryResponse")]
        System.Threading.Tasks.Task<string> DoBillPaymentInquiryAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AuthenticateCustomer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/Authentic" +
            "ateCustomerResponse")]
        string AuthenticateCustomer(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AuthenticateCustomer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/Authentic" +
            "ateCustomerResponse")]
        System.Threading.Tasks.Task<string> AuthenticateCustomerAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="SendBillPaymentAdvice", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/SendBillP" +
            "aymentAdviceResponse")]
        string SendBillPaymentAdvice(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="SendBillPaymentAdvice", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/SendBillP" +
            "aymentAdviceResponse")]
        System.Threading.Tasks.Task<string> SendBillPaymentAdviceAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="SendPayments", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/SendPayme" +
            "ntsResponse")]
        string SendPayments(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="SendPayments", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/SendPayme" +
            "ntsResponse")]
        System.Threading.Tasks.Task<string> SendPaymentsAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AddCustomerBillerAccount", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/AddCustom" +
            "erBillerAccountResponse")]
        string AddCustomerBillerAccount(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AddCustomerBillerAccount", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/AddCustom" +
            "erBillerAccountResponse")]
        System.Threading.Tasks.Task<string> AddCustomerBillerAccountAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCustomerBillerAccounts", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetCustom" +
            "erBillerAccountsResponse")]
        string GetCustomerBillerAccounts(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCustomerBillerAccounts", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetCustom" +
            "erBillerAccountsResponse")]
        System.Threading.Tasks.Task<string> GetCustomerBillerAccountsAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCustomerPayments", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetCustom" +
            "erPaymentsResponse")]
        string GetCustomerPayments(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCustomerPayments", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetCustom" +
            "erPaymentsResponse")]
        System.Threading.Tasks.Task<string> GetCustomerPaymentsAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AddBillerCustomer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/AddBiller" +
            "CustomerResponse")]
        string AddBillerCustomer(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="AddBillerCustomer", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/AddBiller" +
            "CustomerResponse")]
        System.Threading.Tasks.Task<string> AddBillerCustomerAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCollectionsAccount", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetCollec" +
            "tionsAccountResponse")]
        string GetCollectionsAccount(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCollectionsAccount", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetCollec" +
            "tionsAccountResponse")]
        System.Threading.Tasks.Task<string> GetCollectionsAccountAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillersCollectionsAccount", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetBiller" +
            "sCollectionsAccountResponse")]
        string GetBillersCollectionsAccount(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillersCollectionsAccount", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/GetBiller" +
            "sCollectionsAccountResponse")]
        System.Threading.Tasks.Task<string> GetBillersCollectionsAccountAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="EditCustomerBillerAccount", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/EditCusto" +
            "merBillerAccountResponse")]
        string EditCustomerBillerAccount(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="EditCustomerBillerAccount", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/EditCusto" +
            "merBillerAccountResponse")]
        System.Threading.Tasks.Task<string> EditCustomerBillerAccountAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="ResendActivationToken", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ResendAct" +
            "ivationTokenResponse")]
        string ResendActivationToken(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="ResendActivationToken", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/ResendAct" +
            "ivationTokenResponse")]
        System.Threading.Tasks.Task<string> ResendActivationTokenAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="DoCustomProcessing", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/DoCustomP" +
            "rocessingResponse")]
        string DoCustomProcessing(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="DoCustomProcessing", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/DoCustomP" +
            "rocessingResponse")]
        System.Threading.Tasks.Task<string> DoCustomProcessingAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="CreateBiller", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/CreateBil" +
            "lerResponse")]
        string CreateBiller(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="CreateBiller", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/CreateBil" +
            "lerResponse")]
        System.Threading.Tasks.Task<string> CreateBillerAsync(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="VerifyBiller", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/VerifyBil" +
            "lerResponse")]
        string VerifyBiller(string xmlParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="VerifyBiller", ReplyAction="http://services.interswitchng.com/quicktellerservice/QuickTellerService/VerifyBil" +
            "lerResponse")]
        System.Threading.Tasks.Task<string> VerifyBillerAsync(string xmlParams);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface QuickTellerServiceChannel : ValueRemit.Service.Quickteller.QuickTellerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuickTellerServiceClient : System.ServiceModel.ClientBase<ValueRemit.Service.Quickteller.QuickTellerService>, ValueRemit.Service.Quickteller.QuickTellerService {
        
        public QuickTellerServiceClient() {
        }
        
        public QuickTellerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuickTellerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuickTellerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuickTellerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ValidateCustomer(string xmlParams) {
            return base.Channel.ValidateCustomer(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> ValidateCustomerAsync(string xmlParams) {
            return base.Channel.ValidateCustomerAsync(xmlParams);
        }
        
        public string DoTransfer(string xmlParams) {
            return base.Channel.DoTransfer(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> DoTransferAsync(string xmlParams) {
            return base.Channel.DoTransferAsync(xmlParams);
        }
        
        public string CancelTransfer(string xmlParams) {
            return base.Channel.CancelTransfer(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> CancelTransferAsync(string xmlParams) {
            return base.Channel.CancelTransferAsync(xmlParams);
        }
        
        public string SendSessionKey(string xmlParams) {
            return base.Channel.SendSessionKey(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> SendSessionKeyAsync(string xmlParams) {
            return base.Channel.SendSessionKeyAsync(xmlParams);
        }
        
        public string QueryTransfer(string xmlParams) {
            return base.Channel.QueryTransfer(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> QueryTransferAsync(string xmlParams) {
            return base.Channel.QueryTransferAsync(xmlParams);
        }
        
        public string AuthoriseCashOut(string xmlParams) {
            return base.Channel.AuthoriseCashOut(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> AuthoriseCashOutAsync(string xmlParams) {
            return base.Channel.AuthoriseCashOutAsync(xmlParams);
        }
        
        public string AuthoriseAccountCashOut(string xmlParams) {
            return base.Channel.AuthoriseAccountCashOut(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> AuthoriseAccountCashOutAsync(string xmlParams) {
            return base.Channel.AuthoriseAccountCashOutAsync(xmlParams);
        }
        
        public string ReverseCashOut(string xmlParams) {
            return base.Channel.ReverseCashOut(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> ReverseCashOutAsync(string xmlParams) {
            return base.Channel.ReverseCashOutAsync(xmlParams);
        }
        
        public string StatusCheck() {
            return base.Channel.StatusCheck();
        }
        
        public System.Threading.Tasks.Task<string> StatusCheckAsync() {
            return base.Channel.StatusCheckAsync();
        }
        
        public string QueryTransaction(string xmlParams) {
            return base.Channel.QueryTransaction(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> QueryTransactionAsync(string xmlParams) {
            return base.Channel.QueryTransactionAsync(xmlParams);
        }
        
        public string GetSystemSettings(string xmlParams) {
            return base.Channel.GetSystemSettings(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> GetSystemSettingsAsync(string xmlParams) {
            return base.Channel.GetSystemSettingsAsync(xmlParams);
        }
        
        public string CreateUser(string xmlParams) {
            return base.Channel.CreateUser(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserAsync(string xmlParams) {
            return base.Channel.CreateUserAsync(xmlParams);
        }
        
        public string ActivateUser(string xmlParams) {
            return base.Channel.ActivateUser(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> ActivateUserAsync(string xmlParams) {
            return base.Channel.ActivateUserAsync(xmlParams);
        }
        
        public string UpdateUser(string xmlParams) {
            return base.Channel.UpdateUser(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserAsync(string xmlParams) {
            return base.Channel.UpdateUserAsync(xmlParams);
        }
        
        public string ChangePassword(string xmlParams) {
            return base.Channel.ChangePassword(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> ChangePasswordAsync(string xmlParams) {
            return base.Channel.ChangePasswordAsync(xmlParams);
        }
        
        public string ResetPassword(string xmlParams) {
            return base.Channel.ResetPassword(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> ResetPasswordAsync(string xmlParams) {
            return base.Channel.ResetPasswordAsync(xmlParams);
        }
        
        public string AuthenticateUser(string xmlParams) {
            return base.Channel.AuthenticateUser(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateUserAsync(string xmlParams) {
            return base.Channel.AuthenticateUserAsync(xmlParams);
        }
        
        public string AuthenticateUserSecurityToken(string xmlParams) {
            return base.Channel.AuthenticateUserSecurityToken(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateUserSecurityTokenAsync(string xmlParams) {
            return base.Channel.AuthenticateUserSecurityTokenAsync(xmlParams);
        }
        
        public string GetUser(string xmlParams) {
            return base.Channel.GetUser(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> GetUserAsync(string xmlParams) {
            return base.Channel.GetUserAsync(xmlParams);
        }
        
        public string GetBillers(string xmlParams) {
            return base.Channel.GetBillers(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> GetBillersAsync(string xmlParams) {
            return base.Channel.GetBillersAsync(xmlParams);
        }
        
        public string GetLatestBillers() {
            return base.Channel.GetLatestBillers();
        }
        
        public System.Threading.Tasks.Task<string> GetLatestBillersAsync() {
            return base.Channel.GetLatestBillersAsync();
        }
        
        public string GetFeaturedBillers(string xmlParams) {
            return base.Channel.GetFeaturedBillers(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> GetFeaturedBillersAsync(string xmlParams) {
            return base.Channel.GetFeaturedBillersAsync(xmlParams);
        }
        
        public string GetBillerPaymentItems(string xmlParams) {
            return base.Channel.GetBillerPaymentItems(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> GetBillerPaymentItemsAsync(string xmlParams) {
            return base.Channel.GetBillerPaymentItemsAsync(xmlParams);
        }
        
        public string GetBillerCategories() {
            return base.Channel.GetBillerCategories();
        }
        
        public System.Threading.Tasks.Task<string> GetBillerCategoriesAsync() {
            return base.Channel.GetBillerCategoriesAsync();
        }
        
        public string DoBillPaymentInquiry(string xmlParams) {
            return base.Channel.DoBillPaymentInquiry(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> DoBillPaymentInquiryAsync(string xmlParams) {
            return base.Channel.DoBillPaymentInquiryAsync(xmlParams);
        }
        
        public string AuthenticateCustomer(string xmlParams) {
            return base.Channel.AuthenticateCustomer(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateCustomerAsync(string xmlParams) {
            return base.Channel.AuthenticateCustomerAsync(xmlParams);
        }
        
        public string SendBillPaymentAdvice(string xmlParams) {
            return base.Channel.SendBillPaymentAdvice(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> SendBillPaymentAdviceAsync(string xmlParams) {
            return base.Channel.SendBillPaymentAdviceAsync(xmlParams);
        }
        
        public string SendPayments(string xmlParams) {
            return base.Channel.SendPayments(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> SendPaymentsAsync(string xmlParams) {
            return base.Channel.SendPaymentsAsync(xmlParams);
        }
        
        public string AddCustomerBillerAccount(string xmlParams) {
            return base.Channel.AddCustomerBillerAccount(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> AddCustomerBillerAccountAsync(string xmlParams) {
            return base.Channel.AddCustomerBillerAccountAsync(xmlParams);
        }
        
        public string GetCustomerBillerAccounts(string xmlParams) {
            return base.Channel.GetCustomerBillerAccounts(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerBillerAccountsAsync(string xmlParams) {
            return base.Channel.GetCustomerBillerAccountsAsync(xmlParams);
        }
        
        public string GetCustomerPayments(string xmlParams) {
            return base.Channel.GetCustomerPayments(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerPaymentsAsync(string xmlParams) {
            return base.Channel.GetCustomerPaymentsAsync(xmlParams);
        }
        
        public string AddBillerCustomer(string xmlParams) {
            return base.Channel.AddBillerCustomer(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> AddBillerCustomerAsync(string xmlParams) {
            return base.Channel.AddBillerCustomerAsync(xmlParams);
        }
        
        public string GetCollectionsAccount(string xmlParams) {
            return base.Channel.GetCollectionsAccount(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> GetCollectionsAccountAsync(string xmlParams) {
            return base.Channel.GetCollectionsAccountAsync(xmlParams);
        }
        
        public string GetBillersCollectionsAccount(string xmlParams) {
            return base.Channel.GetBillersCollectionsAccount(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> GetBillersCollectionsAccountAsync(string xmlParams) {
            return base.Channel.GetBillersCollectionsAccountAsync(xmlParams);
        }
        
        public string EditCustomerBillerAccount(string xmlParams) {
            return base.Channel.EditCustomerBillerAccount(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> EditCustomerBillerAccountAsync(string xmlParams) {
            return base.Channel.EditCustomerBillerAccountAsync(xmlParams);
        }
        
        public string ResendActivationToken(string xmlParams) {
            return base.Channel.ResendActivationToken(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> ResendActivationTokenAsync(string xmlParams) {
            return base.Channel.ResendActivationTokenAsync(xmlParams);
        }
        
        public string DoCustomProcessing(string xmlParams) {
            return base.Channel.DoCustomProcessing(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> DoCustomProcessingAsync(string xmlParams) {
            return base.Channel.DoCustomProcessingAsync(xmlParams);
        }
        
        public string CreateBiller(string xmlParams) {
            return base.Channel.CreateBiller(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> CreateBillerAsync(string xmlParams) {
            return base.Channel.CreateBillerAsync(xmlParams);
        }
        
        public string VerifyBiller(string xmlParams) {
            return base.Channel.VerifyBiller(xmlParams);
        }
        
        public System.Threading.Tasks.Task<string> VerifyBillerAsync(string xmlParams) {
            return base.Channel.VerifyBillerAsync(xmlParams);
        }
    }
}
